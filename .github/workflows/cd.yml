name: cd-autotrade-admin-api

on:
  push:
    branches:
      - main

env:
  ALLOWED_HOSTS: ${{secrets.ALLOWED_HOSTS}}
  DJANGO_SECRET_KEY: ${{secrets.DJANGO_SECRET_KEY}}
  POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
  POSTGRES_HOST: ${{secrets.POSTGRES_HOST}}
  SALES_SERVICE_API_KEY: ${{secrets.SALES_SERVICE_API_KEY}}
  SALES_SERVICE_BASE_URL: ${{secrets.SALES_SERVICE_BASE_URL}}
  ADMIN_USER_EMAIL: ${{secrets.ADMIN_USER_EMAIL}}
  ADMIN_USER_PASSWORD: ${{secrets.ADMIN_USER_PASSWORD}}
  DEBUG: "False"
  POSTGRES_DB: "autotrade-admin-api-db"
  POSTGRES_USER: "postgres"
  ADMIN_USER_NAME: "admin"
  AWS_REGION: "us-east-1"

jobs:
  build-n-deploy:
    name: "Build and Deploy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: autotrade-admin-api
        run: |
          docker build --build-arg POSTGRES_DB="${{ env.POSTGRES_DB }}" --build-arg POSTGRES_USER="${{ env.POSTGRES_USER }}" --build-arg POSTGRES_PASSWORD="${{ env.POSTGRES_PASSWORD }}" --build-arg POSTGRES_HOST="${{ env.POSTGRES_HOST }}" --build-arg REDIS_URL="${{ env.REDIS_URL }}" --build-arg JWT_SECRET="${{ env.JWT_SECRET }}" --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" --build-arg AWS_REGION="${{ env.AWS_REGION }}" -t 741786965244.dkr.ecr.us-east-1.amazonaws.com/autotrade-admin-api:latest .
          docker push 741786965244.dkr.ecr.us-east-1.amazonaws.com/autotrade-admin-api:latest

      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v3

      - run: aws sts get-caller-identity

      - run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name autotrade-dev-eks

      - name: Fix kube system to run on fargate
        continue-on-error: true
        run: kubectl patch deployment coredns -n kube-system --type json -p='[{"op":"remove", "path":"/spec/template/metadata/annotations/eks.amazonaws.com~1compute-type"}]'
      - name: Restart coredns
        continue-on-error: true
        run: kubectl rollout restart -n kube-system deployment coredns

      - run: kubectl delete secret api-secrets --ignore-not-found
      - run: kubectl create secret generic api-secrets --save-config --from-literal=POSTGRES_DB="${{ env.POSTGRES_DB }}" --from-literal=POSTGRES_USER="${{ env.POSTGRES_USER }}" --from-literal=POSTGRES_PASSWORD="${{ env.POSTGRES_PASSWORD }}" --from-literal=POSTGRES_HOST="${{ env.POSTGRES_HOST }}" --from-literal=REDIS_URL="${{ env.REDIS_URL }}" --from-literal=JWT_SECRET="${{ env.JWT_SECRET }}" --from-literal=AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" --from-literal=AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" --from-literal=AWS_REGION="${{ env.AWS_REGION }}"
      - run: kubectl delete -f k8s/api/deployment.yml --ignore-not-found
      - run: kubectl apply -f k8s/api/
      - run: kubectl get services -o wide
      - run: kubectl get all
      - run: kubectl get deployments
